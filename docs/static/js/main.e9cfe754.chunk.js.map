{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categories","type","value","onChange","newInputValue","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","element","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACwB,KAAtBJ,EAAWK,QACXP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,QAKhD,SACI,uBACIC,KAAK,OACLC,MAAOR,EACPS,SAjBc,SAACN,GACvB,IAAMO,EAAgBP,EAAEQ,OAAOH,MAC/BP,EAAcS,S,+BCPTE,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,yDACK,KAApBD,EAASR,OADM,uBAEA,mCACTU,EAHS,uDAEA,mCAFA,uBAGkEC,UAAUH,IAH5E,SAIII,MAAMF,GAJV,cAITG,EAJS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAY,IAAD,EAC7B,MAAO,CACHC,GAAID,EAAQC,GACZC,MAAOF,EAAQE,MACfV,IAAG,UAAEQ,EAAQG,cAAV,aAAE,EAAgBC,iBAAiBZ,QAX/B,kBAeRM,GAfQ,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBACIC,IAAKf,EACLgB,IAAKN,IACT,4BAAIA,QCLHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IACGqB,EDhBmBK,CAAa1B,GAA/BO,EAF6B,EAE7BA,KAAMa,EAFuB,EAEvBA,QAEd,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAE/CoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEf,qBAAKA,UAAU,YAAf,SAEQT,EAAKE,KAAI,SAAAC,GAAY,IACTC,EAAmBD,EAAnBC,GAAmBD,EAAfE,MAAeF,EAARR,IACnB,OAAO,cAAC,EAAD,eAECQ,GADCC,YEfpBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,IAFf,mBAEvBO,EAFuB,KAEXR,EAFW,KAG9B,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBAEA,6BAGQQ,EAAWgB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCfjC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9cfe754.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const newInputValue = e.target.value;\r\n        setInputValue(newInputValue);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim() !== '') {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n    if (category.trim() !== '') {\r\n        const apiKey = 'iREDG31tSGjOew6urAJAIdtvrjtifSMO';\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&limit=10&q=${encodeURI(category)}`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(element => {\r\n            return {\r\n                id: element.id,\r\n                title: element.title,\r\n                url: element.images?.downsized_medium.url,\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img\r\n                src={url}\r\n                alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {\r\n                loading && <p className=\"animate__animated animate__flash\">Loading</p>\r\n            }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map(element => {\r\n                        const { id, title, url } = element;\r\n                        return <GifGridItem\r\n                            key={id}\r\n                            {...element}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","//use indica que es un hook\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n            });\r\n\r\n    }, [category]);\r\n    return state; //data:[], loading: true\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory\r\n                setCategories={setCategories}\r\n            />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n\r\n                    categories.map((category) => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}